// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  name       String
  secondName String
  email      String    @unique
  password   String
  isOwner    String    @default("Admin")
  avatar     String
  createdAt  DateTime  @default(now())
  rooms      Room[] // Relacionamento: Um usuário pode criar vários quartos
  reserves   Reserve[] // Relacionamento: Um usuário pode fazer várias reservas
}

model Reserve {
  id        String   @id @default(uuid())
  name      String
  roomId    String
  room      Room     @relation(references: [id], fields: [roomId])
  checkIn   DateTime
  checkOut  DateTime
  value     String
  FromWhere String
  status    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id]) // Relacionamento: Uma reserva pertence a um usuário
  userId    String
}

model Room {
  id      String    @id @default(uuid())
  name    String
  User    User     @relation(fields: [userId], references: [id])
  userId  String
  Reserve Reserve[]
}

//quando chegar criar entidade e repositories de reserva e room
